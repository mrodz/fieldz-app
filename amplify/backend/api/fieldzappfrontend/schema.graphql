enum AccountType {
  GUEST
  COACH
  ADMIN
}

type User 
  @model 
  @auth(
    rules: [
      { allow: private, operations: [read], provider: userPools },
      { allow: public, operations: [read], provider: iam },
      { allow: owner, operations: [create, update, delete], provider: userPools }
    ]
  ) {
  id: ID!
  sub: String! @index(name: "bySub", queryField: "userBySub", sortKeyFields: ["id"])
  type: AccountType
  Regions: [Region] @hasMany @auth(
    rules: [
      { allow: owner, operations: [read, update, delete], provider: userPools },
      { allow: private, operations: [read], provider: userPools }
    ]
  )
  Reservation: Reservation @hasOne @auth(
    rules: [
      { allow: owner, operations: [read, update, delete], provider: userPools },
      { allow: private, operations: [read], provider: userPools },
    ]
  )
  bio: String @auth(
    rules: [
      { allow: owner, operations: [create, read, delete], provider: userPools },
      { allow: private, operations: [read], provider: userPools }
    ]
  )
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete], provider: userPools }])
}

type Reservation 
  @model
  @auth(
    rules: [
      { allow: private, operations: [read], provider: userPools },
      { allow: public, operations: [read], provider: iam },
      { allow: owner, operations: [create, update, delete], provider: userPools }
    ]
  ) {
  id: ID!
  dateStart: AWSDateTime
  dateEnd: AWSDateTime
  Field: Field @hasOne
  User: User @belongsTo
  owner: String @auth(
    rules: [
      { allow: owner, operations: [read, delete] },
      { allow: private, operations: [read], provider: userPools }
    ]
  )
}

type Field
  @model
  @auth(
    rules: [
      { allow: private, operations: [read], provider: userPools },
      { allow: public, operations: [read], provider: iam },
      { allow: owner, operations: [create, update, delete], provider: userPools }
    ]
  ) {
  id: ID!
  name: String
  address: String
  regionID: ID! @index(name: "byRegion")
  owner: String @auth(
    rules: [
      { allow: owner, operations: [read, delete] },
      { allow: private, operations: [read], provider: userPools }
    ]
  )
}

type Region
  @model
  @auth(
    rules: [
      { allow: private, operations: [read], provider: userPools },
      { allow: public, operations: [read], provider: iam },
      { allow: owner, operations: [create, update, delete], provider: userPools }
    ]
  ) {
  id: ID!
  name: String!
  banner: AWSURL
  bio: String
  Fields: [Field] @hasMany(indexName: "byRegion", fields: ["id"])
  user: User @belongsTo #(relationName: "UserRegion") @auth(rules: [{ allow: owner, operations: [read, delete] }])
  # userOwners: [String]
  owner: String @auth(
    rules: [
      { allow: owner, operations: [read, delete] },
      { allow: private, operations: [read], provider: userPools }
    ]
  )
}
 